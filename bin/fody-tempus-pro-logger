#!/usr/bin/env node

const colors = require('colors/safe')
const cron = require('node-cron')
const fs = require('fs')
const path = require('path')

const srcDir = path.join(path.dirname(fs.realpathSync(__filename)), '../src')

const config = require(srcDir + '/config')
const uploader = require(srcDir + '/uploader')
const WeatherStation = require(srcDir + '/weather-station')

const schedule = config.get('schedule')

if (!cron.validate(schedule)) {
  console.error(colors.red('Invalid schedule:'), schedule)
  process.exit(1)
}

cron.schedule(schedule, () => {
  console.log(colors.gray('Scanning for readings...'))

  WeatherStation.getRecord(
    config.get('sensor:readings'),
    config.get('sensor:readTimeout'),
    config.get('sensor:addresses')
  )
    .then(record => {
      console.log('Found', colors.green(record.size), 'sensor readings')

      if (record.size > 0) {
        return uploader.upload(record)
      }
    })
    .then(() => {
      console.log('Sensor readings uploaded')
    })
    .catch(error => {
      console.error(colors.red('An error occurred:'), error)
    })
})

console.log('Fody Tempus Pro logger started')
